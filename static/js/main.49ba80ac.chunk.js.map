{"version":3,"sources":["login.js","dashboard/Header.js","dashboard/Sidebar.js","dashboard/Profile.js","dashboard/Dashboard.js","dashboard/Attendance.js","dashboard/Tsidebar.js","dashboard/Tattendance.js","dashboard/Performance.js","dashboard/Studentslevel.js","TextFieldGroup.js","dashboard/Tperformance.js","dashboard/Tprofile.js","dashboard/Tdashboard.js","dashboard/Salary.js","dashboard/Fees.js","App.js","serviceWorker.js","index.js"],"names":["axiosConfig","headers","Login","props","onChange","e","setState","target","name","value","onSubmit","preventDefault","Id","state","id","toUpperCase","password","admin","console","log","axios","post","then","response","profile","data","catch","error","wrong_password","this","undefined","ID","localStorage","setItem","Name","history","push","tid","className","type","placeholder","Component","Header","handle","removeItem","isLogin","to","info","bind","getItem","IMG","onClick","style","cursor","class","src","alt","href","withRouter","Sidebar","color","Profile","student","DOB","Gender","Category","Admission","Branch","Course","Section","Contact_No","rowSpan","width","Dashboard","sname","get","res","token","Attendance","chartData","subGroup","subGroup1","i","Object","values","att","prevState","length","map","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","aspectRatio","scales","xAxes","ticks","maxRotation","minRotation","yAxes","beginAtZero","title","display","text","fontSize","legend","position","height","Tsidebar","image","Tattendance","July","August","September","October","November","December","attendence","o","keys","k","key","fee","Row","Fragment","Performance","maxData","chartData1","per","Studentslevel","TextFieldGroup","disabled","htmlFor","classnames","defaultProps","Tperformance","newID","marks","all","indexOf","colSpan","Tprofile","Subject","Email","Qualification","Tdashboard","Salary","status","test","transactionid","Fees","transaction_id","x","Fee","year","payment_mode","Amount","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49ba80ac.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './style.css';\r\n\r\n\r\nlet axiosConfig = {\r\n  headers: {\r\n      'Content-Type': 'application/json;charset=UTF-8',\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n  }\r\n};\r\n\r\n class Login extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n    \r\n      this.state = {\r\n        admin:'',\r\n        id: '',\r\n        password: '',\r\n        profile:{\r\n\r\n        },\r\n        wrong_password:false\r\n         \r\n      }\r\n      //this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n    componentDidUpdate(){\r\n      \r\n      const {profile} = this.state;\r\n      if(profile === undefined){\r\n        \r\n      }\r\n      else if(profile === 'wrong password'){\r\n        if(this.state.wrong_password === false)\r\n            this.setState({wrong_password:true})\r\n      }\r\n      else if(profile.ID ){\r\n        localStorage.setItem('userName',profile.Name)\r\n        localStorage.setItem('user',profile.ID)\r\n        this.props.history.push(`/student`)\r\n      }\r\n      else if(profile.tid ){\r\n        localStorage.setItem('user',profile.tid)\r\n        localStorage.setItem('userName',profile.Name)\r\n        this.props.history.push(`/teacher`)\r\n       }\r\n    }\r\n    onSubmit = (e) =>{\r\n      e.preventDefault();\r\n      var Id = this.state.id.toUpperCase();\r\n      var password = this.state.password;\r\n      var admin = this.state.admin;\r\n      console.log(Id)\r\n      axios.post(`http://localhost:4000/${admin}`, {\r\n        Id,\r\n        password,\r\n        \r\n      },axiosConfig)\r\n      .then((response) => {        \r\n          this.setState({profile : response.data}) \r\n          \r\n                 \r\n      })\r\n      .catch(function (error) {\r\n      \r\n        console.log(error);\r\n      });\r\n      console.log(this.state.profile)\r\n      \r\n    }\r\n    \r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"model-container \">\r\n            \r\n           <div className=\"card  bg-light\">\r\n             <div className=\"card-body\">   \r\n               <h4 className=\"card-title my-0 p-0\">LogIn </h4>\r\n               <p className=\"card-text m-1\">Welcome to portal...</p>\r\n               \r\n               <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-check form-check-inline mx-auto\">\r\n                    <label className=\"form-check-label mx-3\">\r\n                      <input className=\"form-check-input \" type=\"radio\" name=\"admin\" id=\"1\" value=\"student\" onChange = {this.onChange}/> Student\r\n                    </label>\r\n                    <label className=\"form-check-label\">\r\n                      <input className=\"form-check-input mx-3\" type=\"radio\" name=\"admin\" id=\"2\" value=\"teacher\" onChange = {this.onChange}/> Teacher\r\n                    </label>\r\n                  </div>\r\n                   <div className=\"form-group\">\r\n                     {/* <label for=\"\">username</label> */}\r\n                     <input type=\"text\"\r\n                       className=\"form-control m-0\" name=\"id\" value = {this.state.id} onChange = {this.onChange}  placeholder=\"Enter username\" />\r\n                     \r\n                   </div>\r\n                   <div className=\"form-group m-0\">\r\n                     {/* <label for=\"password\">password</label> */}\r\n                     <input type=\"password\" className=\"form-control\" name=\"password\" value={this.state.password} onChange = {this.onChange}  placeholder=\"Enter Password...\" />\r\n                   </div>\r\n                   {this.state.wrong_password ? (\r\n                        <p className = 'text-danger'>wrong password</p>\r\n                          ) : null}\r\n                   <i className = \"text-primary\">Forgot password</i>\r\n                   <button type=\"submit\" className=\"btn btn-primary mt-1\">LogIn</button>\r\n               </form>\r\n             </div>\r\n           </div></div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nimport '../style.css';\r\n// import '../panel.css';\r\n\r\n\r\nexport class Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             info:false,\r\n             isLogin: true\r\n        }\r\n        this.handle = this.handle.bind(this)\r\n    }\r\n\r\n        handle = (e) =>{\r\n            e.preventDefault()\r\n            localStorage.removeItem('user')\r\n            localStorage.removeItem('userName')\r\n            this.setState({isLogin: false})\r\n            return <Redirect to='/teacher'/>\r\n        }\r\n        componentDidMount(){\r\n            if(!this.setState.isLogin){\r\n                // this.props.history.push(`/`)\r\n            //    return <Redirect to='/'/>\r\n            }\r\n        }\r\n    \r\n    \r\n    \r\n\r\n\r\n    render() {\r\n        \r\n        const Id = localStorage.getItem('user')\r\n        const Name = localStorage.getItem('userName')\r\n        console.log(Name,Id)\r\n        console.log(\"info : \",this.state.info)\r\n        const IMG = 'https://joeschmoe.io/api/v1/' + Name ;\r\n        \r\n        return (\r\n            \r\n               <div className=\"nav-top\">\r\n                    <div className=\"nav-title\">IIIT KOTA </div>\r\n                \r\n                  \r\n                   <li onClick={() =>{this.setState({info : !this.state.info})}} className=\"link\" style={{cursor : 'pointer'}}>\r\n                   <i className=\"fa fa-user-circle\" ></i> Profile <i className=\"fa fa-angle-down\" ></i>\r\n                   \r\n                   </li>\r\n                   {this.state.info ? (\r\n                        <div class=\"panel\">\r\n                        <div className= \"user\">\r\n                            <img src = {IMG} className = 'card-img ' alt = \"p\" />\r\n                            <div className = 'cardBody'>\r\n                                <h5>{Name}</h5>\r\n                                <p>{Id}</p>\r\n                            </div>\r\n                        </div> \r\n                        <button type=\"button\" name=\"logout\" onClick = {this.handle} className=\"btn btn-danger \" id=\"lo\"><a href=\"http://localhost:3000\">Log Out</a></button>\r\n                        <input name=\"\" id=\"set\" class=\"btn btn-primary\" type=\"button\" value=\"Settings\"/>\r\n                   </div>\r\n                   ):null}\r\n                   \r\n                    {/* <div class=\"panel\">\r\n                        <div>\r\n                            <img src = {IMG} className = 'card-img ' alt = \"p\" />\r\n                            <div className = 'cardBody'>\r\n                                {/* <h5>{this.props.value.Name}</h5>\r\n                                <p>{this.props.value.ID}</p> */}\r\n                                {/* <h5>Rishab</h5> */}\r\n                                {/* <p>2018KUCP1131</p> */}\r\n                            {/* </div>  */}\r\n                        {/* </div> */}\r\n                    {/* </div> */}\r\n                </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nimport '../style.css';\r\n\r\n class Sidebar extends Component {\r\n     constructor(props) {\r\n         super(props)\r\n     \r\n         this.state = {\r\n              \r\n         }\r\n     }\r\n     \r\n\r\n    \r\n    render() {\r\n        // const image = 'https://joeschmoe.io/api/v1/' + this.props.value.Name;\r\n        const Id = localStorage.getItem('user')\r\n        const Name = localStorage.getItem('userName')\r\n        console.log(Name,Id)\r\n        console.log(\"info : \",this.state.info)\r\n        const IMG = 'https://joeschmoe.io/api/v1/' + Name ;\r\n        return (\r\n            <div className='box'>\r\n                <div className= \"user\">\r\n                    <img src = {IMG} className = 'card-img ' alt = \"p\" />\r\n                    <div className = 'cardBody'>\r\n                        <h5>{Name}</h5>\r\n                        <p>{Id}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <ul className=\"topic\">\r\n                    <li><i className=\"fa fa-home\" ></i> <NavLink style={{ color: 'white' }} to= {'/student'} >Home</NavLink></li>\r\n                    <li><i className=\"fa fa-book\"></i><NavLink style={{ color: 'white' }} to= {'/student/Attendance'} > Attendance</NavLink></li>\r\n                    <li><i className=\"fas fa-award\"></i> <NavLink style={{ color: 'white' }} to= {'/student/Performance'} > Performance</NavLink> </li>\r\n                    <li><i className=\"fa fa-wallet\" ></i> <NavLink style={{ color: 'white' }} to= {'/student/Fees'} >Fees</NavLink></li>\r\n                </ul>\r\n\r\n                <div className='about'>\r\n                <i className=\"fa fa-copyright\"> By Pranjal & team</i><br />\r\n                version v1.0.0.1\r\n            </div>\r\n\r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\n//import axios from 'axios';\r\n\r\n\r\nimport '../style.css';\r\n\r\n\r\n\r\n class Profile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n       \r\n        this.state = {\r\n            \r\n            student:{\r\n                \r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n   \r\n    render() {\r\n       const {ID,Name,DOB,Gender,Category,Admission,Branch,Course,Section,Contact_No} = this.props.value\r\n       const IMG = 'https://joeschmoe.io/api/v1/' + Name;\r\n       \r\n        return (\r\n            <div className = \" profile \">\r\n               \r\n                <div className = \"m-4\">\r\n                  <h1>Profile</h1>\r\n                   <i className=\"fas fa-pencil-alt float-right\" style={{color:'green',cursor : 'pointer'}}></i>   </div>            \r\n                        <table className=\"table m-4\">\r\n                            \r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th className=\"row\">Name : </th>\r\n                                        <td>{Name}</td>\r\n                                        <td rowSpan = '3' > <img src = {IMG} alt = \"Profile\" width = \"100px\" /></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"row\"> ID : </th>\r\n                                        <td>{ID} </td>\r\n                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"row\"> Contact no : </th>\r\n                                        <td>{Contact_No}</td>\r\n                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"row\"> DOB : </th>\r\n                                        <td> {DOB}</td>\r\n                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"row\"> Gender : </th>\r\n                                        <td> {Gender}</td>\r\n                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"row\"> Category : </th>\r\n                                        <td>{Category}</td>                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"row\"> Admission : </th>\r\n                                        <td>{Admission}</td>                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"row\"> Branch : </th>\r\n                                        <td> {Branch}</td>                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"row\"> Course : </th>\r\n                                        <td> {Course}</td>                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"row\"> Section : </th>\r\n                                        <td> {Section} </td>\r\n                                        \r\n                                    </tr>\r\n                                </tbody>\r\n                        </table>\r\n\r\n                   \r\n                   \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Profile","import React, { Component } from 'react'\r\n\r\n\r\nimport axios from 'axios'\r\nimport './Header'\r\nimport Header from './Header'\r\nimport Sidebar from './Sidebar'\r\nimport Profile from './Profile'\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             Id :'',\r\n             profile:{\r\n\r\n             },\r\n             sname:{}\r\n            \r\n        }\r\n    }\r\n    \r\n\r\n\r\n   // chartData = ()=>{\r\n    //     let subName = ['adbms','adms','aoops','apython','ampmc','aeco']\r\n    //     for(let i = 0;i <6;i++){\r\n    //         const { Id } = this.props.match.params;\r\n    //         let count = subName[i];\r\n    //         axios.get(`http://localhost:4000/Attendance/${Id}`,{Id,count})\r\n    //         .then(res => { \r\n    //             if(res.data){\r\n    //                  const a = res.data;\r\n    //                 console.log(res.data)\r\n    //                 // this.setState({profile : res.data})\r\n    //                 // console.log(this.state.profile)\r\n    //                 this.setState(() =>{\r\n    //                     this.state.sub.push(Object.values(a))\r\n    //                     console.log(this.state)\r\n    //                 } )\r\n    //             }\r\n    //             else console.log('error')\r\n            \r\n    //         }).catch(function(error){\r\n        \r\n    //             console.log(error);\r\n    //         })\r\n    //         }\r\n    // }\r\n    \r\n\r\n\r\n    componentDidMount(){\r\n        // const { Id } = this.props.match.params;\r\n        const Id = localStorage.getItem('user')\r\n       \r\n        axios.get(`http://localhost:4000/${Id}`)\r\n        .then(res => { \r\n            if(res.data){\r\n                console.log(res.data)\r\n                this.setState({profile : res.data})\r\n                console.log(this.state.profile)\r\n            }\r\n            else console.log('error')\r\n            \r\n        }).catch(function(error){\r\n      \r\n            console.log(error);\r\n          })\r\n\r\n         //var sName='adbms'\r\n        //   axios.get(`http://localhost:4000/Attendance/${Id}`,{Id,sName})\r\n        // .then(res => { \r\n        //     if(res.data){\r\n        //         console.log(res.data)\r\n        //         this.setState({sname : res.data})\r\n        //         console.log(this.state.sname)\r\n        //     }\r\n        //     else console.log('error')\r\n            \r\n        // }).catch(function(error){\r\n      \r\n        //     console.log(error);\r\n        //   })\r\n\r\n          const token = localStorage.getItem('user')\r\n          console.log(\"ID:\",token)\r\n    }\r\n    \r\n    render() {\r\n        //  const {pathname} = this.props.location;\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <div className = \"row\">\r\n                    <Sidebar value = {this.state.profile} />  \r\n                    {/* <Router>                              */}\r\n                        <Profile  value = {this.state.profile} />\r\n                        \r\n                        \r\n                    {/* </Router> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Dashboard;","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Header from './Header'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { Bar} from \"react-chartjs-2\";\r\n\r\n\r\n \r\nclass Attendance extends Component {\r\n    constructor(props) {\r\n        super(props)  \r\n\r\n        this.state = {\r\n            data:[],\r\n            \r\n            chartData:{\r\n                \r\n\r\n                    }\r\n\r\n             \r\n\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        const Id = localStorage.getItem('user') \r\n        const subGroup = [\"adbms\",\"adms\",\"aoops\",\"apython\",\"ampmc\",\"aeco\"]\r\n        const subGroup1 = [\"dbms\",\"dms\",\"oops\",\"python\",\"mpmc\",\"eco\"]\r\n        for(let i = 0;i <subGroup.length;i++){\r\n            axios.get(`http://localhost:4000/Attendance/${subGroup[i]}/${Id}`)\r\n            .then(res => { \r\n                if(res.data){\r\n                    console.log(res.data)\r\n                    const [,...att] = Object.values(res.data)\r\n                    att.push(subGroup1[i].toUpperCase())\r\n                    this.setState(prevState => ({\r\n                        data: [...prevState.data, att]\r\n                      }))\r\n                    \r\n                    console.log('data:',this.state.data)\r\n                    \r\n                \r\n                }\r\n                else console.log('error')\r\n                \r\n            }).catch(function(error){\r\n        \r\n                console.log(error);\r\n            })\r\n\r\n            } \r\n        \r\n        \r\n    }\r\n \r\n    render() {\r\n        const Id = localStorage.getItem('user')\r\n         console.log('data:2',this.state.data)\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Sidebar value = {Id}/>\r\n                <div className=\"Charts attendance row\">\r\n                    {this.state.data.map( i =>\r\n                        <Bar    \r\n\r\n                            data={{\r\n                                labels: [\"July\",\"August\", \"September\",\"October\",\"November\",\"December\"],\r\n                                datasets: [{\r\n                                    label: \"Attendance\",\r\n                                    data: i,\r\n                                    backgroundColor: [\r\n                                        'rgba(255, 99, 132, 0.2)',\r\n                                        'rgba(54, 162, 235, 0.2)',\r\n                                        'rgba(255, 206, 86, 0.2)',\r\n                                        'rgba(75, 192, 192, 0.2)',\r\n                                        'rgba(153, 102, 255, 0.2)',\r\n                                        'rgba(255, 159, 64, 0.2)'] ,\r\n                                    borderColor: [\r\n                                        'rgba(255,99,132,1)',\r\n                                        'rgba(54, 162, 235, 1)',\r\n                                        'rgba(255, 206, 86, 1)',\r\n                                        'rgba(75, 192, 192, 1)',\r\n                                        'rgba(153, 102, 255, 1)',\r\n                                        'rgba(255, 159, 64, 1)'],\r\n                                    borderWidth: 1                  \r\n                                        }]}\r\n                            } \r\n                            options={ {\r\n                                responsive: false,\r\n                                aspectRatio:1.5,\r\n                                scales: {\r\n                                    xAxes: [{\r\n                                        ticks: {\r\n                                        maxRotation: 90,\r\n                                        minRotation: 80}\r\n                                            }],\r\n                                    yAxes: [{\r\n                                        ticks: {\r\n                                        beginAtZero: true}\r\n                                            }]\r\n                                        },\r\n                                title: {\r\n                                        display: true,\r\n                                        text: i[6] + \" Attendance Per Month\",\r\n                                        fontSize:25\r\n                                        },\r\n                                legend: {\r\n                                    display: true,\r\n                                    position:\"right\"\r\n                                }\r\n                                        } }\r\n        \r\n                                width={800}\r\n                                height = {500}/>\r\n\r\n                    )}\r\n    </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Attendance;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport '../style.css';\r\n\r\n class Tsidebar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n    \r\n\r\n    render() {\r\n        const Id = localStorage.getItem('user')\r\n        const Name = localStorage.getItem('userName')\r\n        const image = 'https://joeschmoe.io/api/v1/' + Name;\r\n        return (\r\n            <div className='box'>\r\n                <div className= \"user\">\r\n                    <img src = {image} className = 'card-img ' alt = \"p\" />\r\n                    <div className = 'cardBody'>\r\n                        <h5>{Name}</h5>\r\n                        <p>{Id}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <ul className=\"topic\">\r\n                <li><i className=\"fa fa-home\" ></i> <NavLink style={{ color: 'white' }} to= {'/teacher'} >Home</NavLink></li>\r\n                    <li><i className=\"fa fa-book\"></i><NavLink style={{ color: 'white' }} to= {'/teacher/Attendance'} > Attendance</NavLink></li>\r\n                    <li><i className=\"fas fa-award\"></i> <NavLink style={{ color: 'white' }} to= {'/teacher/Performance'} > Performance</NavLink> </li>\r\n                    <li><i className=\"fas fa-award\"></i> <NavLink style={{ color: 'white' }} to= {'/teacher/salary'} > Salary</NavLink> </li>\r\n                    \r\n                </ul>\r\n\r\n                <div className='about'>\r\n                <i className=\"fa fa-copyright\"> By pranjal & team</i><br />\r\n                version v1.0.0.1\r\n            </div>\r\n\r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Tsidebar;","import React, { Component } from 'react'\r\nimport Tsidebar from './Tsidebar'\r\nimport Header from './Header'\r\nimport axios from 'axios'\r\nimport '../style.css'\r\n\r\n\r\nlet axiosConfig = {\r\n    headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n    }\r\n  };\r\n\r\n\r\nclass Tattendance extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            attendence : [],\r\n            id:'',\r\n            July:'',\r\n            August:'',\r\n            September:'',\r\n            October:'',\r\n            November:'',\r\n            December:''  \r\n            \r\n        }\r\n    }\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n    onSubmit = e => {\r\n        const Id = localStorage.getItem('user') ;\r\n        const {id,July,August,September,October,November,December} = this.state;\r\n        const att = {id,July,August,September,October,November,December}\r\n        console.log(att)\r\n        axios.post(`http://localhost:4000/teacher/attendance/new/${Id}`,att,axiosConfig)\r\n            .then(res => {\r\n                console.log(res.data);\r\n            })\r\n\r\n    }\r\n    \r\n    \r\n    componentDidMount(){\r\n        const Id = localStorage.getItem('user')       \r\n        axios.get(`http://localhost:4000/teacher/attendance/${Id}`)\r\n        .then(res => { \r\n            if(res.data){\r\n                console.log(res.data)\r\n                this.setState({attendence: res.data})\r\n                console.log(this.state.attendence[0])\r\n               \r\n            }\r\n            else console.log('error')\r\n            \r\n        }).catch(function(error){\r\n      \r\n            console.log(error);\r\n          })\r\n        \r\n    }\r\n    render() {        \r\n        const data = this.state.attendence\r\n        const o = data[0]\r\n        let keys = [];\r\n        for(var k in o) keys.push(k);\r\n        console.log('data: ' ,data)\r\n        console.log('data: ' ,keys)\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Tsidebar/>                \r\n            <div className=\"profile table\">\r\n                <table class=\"table table-striped table-inverse table-responsive\">\r\n                    <thead class=\"thead-inverse\">\r\n                        <tr>\r\n                            \r\n                            {keys.map(i => (<th>{i}</th>))}\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { data.map(i  => <Row key = {i.id} fee = {i}/>)}                            \r\n                        </tbody>\r\n                        \r\n                                             \r\n                </table>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input className=\"mx-1 inputId rounded\"  name = \"id\" value = {this.state.id} placeholder = \"Enter Id\" onChange = {this.onChange} />\r\n                    <input className=\"mx-1 inputAtt rounded\" name = \"July\" value = {this.state.July} placeholder = \"July\" onChange = {this.onChange} />\r\n                    <input className=\"mx-1 inputAtt rounded\" name = \"August\" value = {this.state.August} placeholder = \"August\" onChange = {this.onChange} />\r\n                    <input className=\"mx-1 inputAtt rounded\" name = \"September\" value = {this.state.September} placeholder = \"September\" onChange = {this.onChange} />\r\n                    <input className=\"mx-1 inputAtt rounded\" name = \"October\" value = {this.state.October} placeholder = \"October\" onChange = {this.onChange} />\r\n                    <input className=\"mx-1 inputAtt rounded\" name = \"November\" value = {this.state.November} placeholder = \"November\" onChange = {this.onChange} />\r\n                    <input className=\"mx-1 inputAtt rounded\" name = \"December\" value = {this.state.December} placeholder = \"December\" onChange = {this.onChange} />\r\n                    <input type='submit' value = \"Add\" className=\"btn-primary rounded\"/> \r\n                </form>\r\n                \r\n            </div>\r\n                \r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass Row extends Component {\r\n    render() {\r\n        const data = this.props.fee\r\n        const values = Object.values(data)\r\n        return (\r\n        <React.Fragment>\r\n            <tr>\r\n                 {values.map(i=>(<td>{i}</td>))}\r\n             </tr>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Tattendance;","import React, { Component } from 'react'\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport axios from  'axios'\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\n\r\nclass Performance extends Component {\r\n    constructor(props) {\r\n        super(props)  \r\n\r\n        this.state = {\r\n            data:[],\r\n            maxData:[],\r\n            chartData1:{\r\n                labels: [\"DBMS\",\"OOPS\",\"PYTHON\",\"DMS\",\"ECO\",\"MPMC\"],\r\n                datasets: [{label: \"Max Marks\",\r\n                            data: [40,39,40,31,37,35],},\r\n                        {\r\n                        label: \"Your marks\",\r\n                        data: [30,22,38,28,30,28],\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(255, 206, 86, 0.2)',\r\n                            'rgba(75, 192, 192, 0.2)',\r\n                            'rgba(153, 102, 255, 0.2)',\r\n                            'rgba(255, 159, 64, 0.2)'] ,\r\n                        borderColor: [\r\n                            'rgba(255,99,132,1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'],\r\n                        borderWidth: 1                  \r\n\r\n                }, \r\n                   \r\n            \r\n            ]\r\n\r\n            }\r\n\r\n             \r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const Id = localStorage.getItem('user') \r\n        \r\n       \r\n            axios.get(`http://localhost:4000/performance/${Id}`)\r\n            .then(res => { \r\n                    const [ ,...per] = Object.values(res.data)                    \r\n                    this.setState(prevState => ({\r\n                        data: per\r\n                      }))\r\n                    console.log('data:',this.state.data)\r\n             }).catch(function(error){\r\n                    console.log(error);\r\n            })\r\n            axios.get(`http://localhost:4000/performance/max/${Id}`)\r\n            .then(res => { \r\n                                     \r\n                    this.setState({\r\n                        maxData: Object.values(res.data)\r\n                      })\r\n                    console.log('data2:',this.state.maxData)\r\n             }).catch(function(error){\r\n                    console.log(error);\r\n            })\r\n\r\n            \r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Sidebar />\r\n            \r\n            <div className=\"Charts attendance\">\r\n\r\n            <Bar  \r\n\r\n                data={{\r\n                    labels: [\"DBMS\",\"OOPS\",\"PYTHON\",\"DMS\",\"ECO\",\"MPMC\"],\r\n                    datasets: [{label: \"Max Marks\",\r\n                                data: this.state.maxData,},\r\n                          {\r\n                            label: \"Your Marks\",\r\n                            data: this.state.data,\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 0.2)',\r\n                                'rgba(54, 162, 235, 0.2)',\r\n                                'rgba(255, 206, 86, 0.2)',\r\n                                'rgba(75, 192, 192, 0.2)',\r\n                                'rgba(153, 102, 255, 0.2)',\r\n                                'rgba(255, 159, 64, 0.2)'] ,\r\n                            borderColor: [\r\n                                'rgba(255,99,132,1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                                'rgba(153, 102, 255, 1)',\r\n                                'rgba(255, 159, 64, 1)'],\r\n                            borderWidth: 1                  \r\n    \r\n                    }\r\n                        ]}\r\n                            }\r\n                    options={ {\r\n                        responsive: false,\r\n                        scales: {\r\n                            xAxes: [{\r\n                                ticks: {\r\n                                maxRotation: 90,\r\n                                minRotation: 80}\r\n                                    }],\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                beginAtZero: true}\r\n                                    }]\r\n                                },\r\n                        title: {\r\n                                display: true,\r\n                                text: \"Marks per Subject-MID TERM\",\r\n                                fontSize:25\r\n                                },\r\n                        legend: {\r\n                            display: true,\r\n                            position:\"right\"\r\n                        }\r\n                            } }\r\n\r\n                    width={800}\r\n                    height = {500}\r\n                />\r\n                 <Bar  \r\n\r\n                    data={\r\n                        this.state.chartData1} \r\n                        options={ {\r\n                            responsive: false,\r\n                            scales: {\r\n                                xAxes: [{\r\n                                    ticks: {\r\n                                    maxRotation: 90,\r\n                                    minRotation: 80}\r\n                                        }],\r\n                                yAxes: [{\r\n                                    ticks: {\r\n                                    beginAtZero: true}\r\n                                        }]\r\n                                    },\r\n                            title: {\r\n                                    display: true,\r\n                                    text: \"Marks per Subject-END TERM\",\r\n                                    fontSize:25\r\n                                    },\r\n                            legend: {\r\n                                display: true,\r\n                                position:\"right\"\r\n                            }\r\n                                } }\r\n\r\n                            width={800}\r\n                            height = {500} />\r\n                                    </div></div>\r\n                            )\r\n                        }\r\n                    }\r\n\r\nexport default Performance;","import React, { Component } from 'react'\r\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\r\n\r\nclass Studentslevel extends Component {\r\n\r\n     constructor(props) {\r\n         super(props)\r\n\r\n         this.state = {\r\n             chartData: {\r\n                 labels: [\"Brilliant\",\"Excellent\",\"Good\",\"Average\",\"Fail\"],\r\n                 datasets: [{\r\n                         label: \"Performance\",\r\n                         data: [5, 15, 40, 50, 2],\r\n                         backgroundColor: [\r\n                             'rgba(255, 99, 132, 0.2)',\r\n                             'rgba(54, 162, 235, 0.2)',\r\n                             'rgba(255, 206, 86, 0.2)',\r\n                             'rgba(75, 192, 192, 0.2)',\r\n                             'rgba(153, 102, 255, 0.2)',\r\n                            //  'rgba(255, 159, 64, 0.2)'\r\n                         ],\r\n                        borderColor:\r\n                         [\r\n                             'rgba(255,99,132,1)',\r\n                             'rgba(54, 162, 235, 1)',\r\n                             'rgba(255, 206, 86, 1)',\r\n                             'rgba(75, 192, 192, 1)',\r\n                             'rgba(153, 102, 255, 1)',\r\n                            //  'rgba(255, 159, 64, 1)'\r\n                         ],\r\n                         borderWidth: 1\r\n                     },\r\n                 ]\r\n             }\r\n         }\r\n     }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Pie\r\n                    data={this.state.chartData}\r\n                    options={{\r\n                        responsive: false,\r\n                        scales:\r\n                        {\r\n                            xAxes: [{\r\n                                ticks: {\r\n                                    maxRotation: 90,\r\n                                    minRotation: 80\r\n                                }\r\n                            }],\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero: true\r\n                                }\r\n                            }]\r\n                        },\r\n                        title: {\r\n                            display: true,\r\n                            text: \"Status of Class\",\r\n                            fontSize: 25\r\n                        },\r\n                        legend: {\r\n                            display: true,\r\n                            position: \"right\"\r\n                        }\r\n                    }\r\n                    }\r\n                    width={800}\r\n                    height={500}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Studentslevel;","import React from 'react'\nimport classnames from 'classnames'\nimport PropTypes from 'prop-types'\n\nconst TextFieldGroup = ({\n  name,\n  placeholder,\n  value,\n  label,\n  error,\n  info,\n  type,\n  onChange,\n  disabled\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor = {name}>{label}</label>\n      <input\n        type={type}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n      />\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  )\n}\n\nTextFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.string\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup\n","import React, { Component } from 'react'\r\nimport Tsidebar from './Tsidebar'\r\nimport Header from './Header'\r\nimport axios from 'axios'\r\nimport Studentslevel from './Studentslevel'\r\nimport TextFieldGroup from '../TextFieldGroup'\r\n\r\nlet axiosConfig = {\r\n    headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n    }\r\n  };\r\n\r\nclass Tperformance extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            attendence : [],\r\n            Id:'',\r\n            marks:'' ,\r\n            \r\n                    \r\n        }    \r\n        this.onChange = this.onChange.bind(this)\r\n    \r\n        \r\n    }\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n    onSubmit = (e) =>{\r\n        \r\n        const Id = localStorage.getItem('user') \r\n        const newID = this.state.Id.toUpperCase();\r\n        const marks = this.state.marks;\r\n        const all = this.state.attendence.map(i => i.ID )\r\n        console.log(all)\r\n        if(all.indexOf(newID) < 0){\r\n            axios.post(`http://localhost:4000/teacher/performance/new/${Id}`,{\r\n                ID : newID,\r\n                marks: marks},axiosConfig)\r\n            .then(res => {\r\n                console.log(res.data);\r\n            })\r\n        }else{\r\n            axios.post(`http://localhost:4000/teacher/performance/update/${Id}`,{\r\n                ID : newID,\r\n                marks: marks},axiosConfig)\r\n            .then(res => {\r\n                console.log(res.data);\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    \r\n    componentDidMount(){\r\n        const Id = localStorage.getItem('user')       \r\n        axios.get(`http://localhost:4000/teacher/performance/${Id}`)\r\n        .then(res => { \r\n            if(res.data){\r\n                console.log(res.data)\r\n                this.setState({attendence: res.data})\r\n                console.log(this.state.attendence[0])\r\n               \r\n            }\r\n            else console.log('error')\r\n            \r\n        }).catch(function(error){\r\n      \r\n            console.log(error);\r\n          })\r\n        \r\n    }\r\n    render() {        \r\n        const data = this.state.attendence\r\n        const o = data[0]\r\n        let keys = [];\r\n        \r\n        for(var k in o) keys.push(k);\r\n        console.log('data: ' ,data)\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Tsidebar/>                \r\n            <div className=\"profile row\">\r\n                <table class=\"table table-bordered table-responsive\">\r\n                \r\n                    <thead class=\"thead-inverse\">\r\n                        <tr>\r\n                            \r\n                            {keys.map(i => (<th>{i}</th>))}\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { data.map(i  => <Row key = {i.id} fee = {i}/>)} \r\n                            <td colSpan='2' className='p-0'>\r\n                            <form onSubmit={this.onSubmit}>                     \r\n                                <input className=\"m-1\" name = \"Id\" value = {this.state.Id} placeholder = \"Enter Id\" onChange = {this.onChange} />\r\n                                <input name = \"marks\" value = {this.state.marks} placeholder = \"Enter marks\" onChange = {this.onChange} />\r\n                                <input type='submit' value = \"Add\" className=\"btn-primary\"/>\r\n                            </form>\r\n                                </td> \r\n                                                     \r\n                        </tbody>\r\n                                          \r\n                          \r\n                                \r\n                        \r\n                            \r\n                                   \r\n                </table><br/>\r\n                \r\n                \r\n                <Studentslevel />\r\n            </div></div>\r\n        )\r\n    }\r\n}\r\nclass Row extends Component {\r\n    render() {\r\n        const data = this.props.fee\r\n        const values = Object.values(data)\r\n        return (\r\n            \r\n            <React.Fragment>\r\n            <tr>\r\n                 {/* {keys.map(i => (<th>{i}</th>))} */}\r\n                 {values.map(i=>(<td>{i}</td>))}\r\n             </tr>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Tperformance;","import React, { Component } from 'react';\r\n//import axios from 'axios';\r\nimport '../style.css';\r\nimport Studentslevel from './Studentslevel'\r\nclass Tprofile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n       \r\n        this.state = {\r\n            student :{\r\n                \r\n            }\r\n           \r\n        }\r\n        \r\n    }\r\n    \r\n   \r\n    render() {\r\n       const {tid,Name,DOB,Gender,Subject,Email,Qualification,Contact_No} = this.props.profile\r\n       const IMG = 'https://joeschmoe.io/api/v1/' + Name;\r\n       \r\n        return (\r\n            <div className = \" profile \">\r\n                <div className = \"m-4\">\r\n                  <h1>Profile</h1>\r\n                   <i className=\"fas fa-pencil-alt float-right\" style={{color:'green',cursor : 'pointer'}}></i>   </div>            \r\n                        <table className=\"table m-4\">\r\n                            \r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th className=\"row\">Name : </th>\r\n                                        <td>{Name}</td>\r\n                                        <td rowSpan = '3' > <img src = {IMG} alt = \"Profile\" width = \"100px\" /></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"row\"> ID : </th>\r\n                                        <td>{tid} </td>\r\n                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"row\"> Contact no : </th>\r\n                                        <td>{Contact_No}</td>\r\n                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"row\"> Email : </th>\r\n                                        <td> {Email} </td>\r\n                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"row\"> DOB : </th>\r\n                                        <td> {DOB}</td>\r\n                                        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"row\"> Gender : </th>\r\n                                        <td> {Gender}</td>\r\n                                        \r\n                                    </tr>\r\n                                   \r\n                                    <tr>\r\n                                        <th className=\"row\"> Subject : </th>\r\n                                        <td>{Subject}</td>                                        \r\n                                    </tr>\r\n                                    \r\n                                    <tr>\r\n                                        <th className=\"row\"> Qualification : </th>\r\n                                        <td> {Qualification}</td>                                        \r\n                                    </tr>\r\n                                    \r\n                                </tbody>\r\n                        </table>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tprofile","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Header from './Header'\r\nimport Tsidebar from './Tsidebar'\r\nimport Tprofile from './Tprofile'\r\n\r\n class Tdashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             profile:{\r\n                 \r\n             }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const Id = localStorage.getItem('user')\r\n        axios.get(`http://localhost:4000/teacher/${Id}`)\r\n        .then(res => { \r\n            if(res.data){\r\n                console.log(res.data)\r\n                this.setState({profile : res.data})\r\n                console.log(this.state.profile)\r\n            }\r\n            else console.log('error')\r\n            \r\n        }).catch(function(error){\r\n      \r\n            console.log(error);\r\n          })\r\n          console.log(this.state.profile)\r\n        \r\n    }\r\n    \r\n    render() {\r\n        const {profile} = this.state\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className = \"row\">\r\n                    <Tsidebar key = {profile.tid} profile = {profile} />\r\n                    <Tprofile profile = {this.state.profile} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tdashboard;","import React, { Component } from 'react'\r\nimport Tsidebar from './Tsidebar'\r\nimport Header from './Header'\r\nimport axios from 'axios'\r\nclass Salary extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            status : [],\r\n            test:{\r\n                \"year\": \"2018-19\",\r\n                \"type\": \"Hostel\",\r\n                \"transaction_id\": \"14201998\",\r\n                \"payment_mode\": \"Cash\",\r\n                \"status\": \"To be Refunded\",\r\n                \"id\": \"2018KUCP1127\",\r\n                \"Amount\": \"26,000\"\r\n            }      \r\n            \r\n        }\r\n    }\r\n    \r\n    \r\n    componentDidMount(){\r\n        const Id = localStorage.getItem('user')       \r\n        axios.get(`http://localhost:4000/Salary/${Id}`)\r\n        .then(res => { \r\n            if(res.data){\r\n                console.log(res.data)\r\n                this.setState({status: res.data})\r\n                console.log(this.state.status[0])\r\n               \r\n            }\r\n            else console.log('error')\r\n            \r\n        }).catch(function(error){\r\n      \r\n            console.log(error);\r\n          })\r\n        \r\n    }\r\n    render() {        \r\n        const data = this.state.status\r\n        const o = data[0]\r\n        let keys = [];\r\n        for(var k in o) keys.push(k);\r\n        console.log('data: ' ,data)\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Tsidebar/>                \r\n            <div className=\"profile table\">\r\n                <table class=\"table table-striped table-inverse table-responsive\">\r\n                    <thead class=\"thead-inverse\">\r\n                        <tr>\r\n                            \r\n                            {keys.map(i => (<th>{i}</th>))}\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { data.map(i  => <Row key = {i.transactionid} fee = {i}/>)}                            \r\n                        </tbody>                      \r\n                </table>\r\n            </div></div>\r\n        )\r\n    }\r\n}\r\nclass Row extends Component {\r\n    render() {\r\n        const data = this.props.fee\r\n        const values = Object.values(data)\r\n        return (\r\n            \r\n            <React.Fragment>\r\n            <tr>\r\n                 {/* {keys.map(i => (<th>{i}</th>))} */}\r\n                 {values.map(i=>(<td>{i}</td>))}\r\n                 <td><i className=\"fa fa-download\"></i></td>\r\n             </tr>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Salary;","import React, { Component } from 'react'\r\nimport Sidebar from './Sidebar'\r\nimport Header from './Header'\r\nimport axios from 'axios'\r\nclass Fees extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            status : [],\r\n            test:{\r\n                \"year\": \"2018-19\",\r\n                \"type\": \"Hostel\",\r\n                \"transaction_id\": \"14201998\",\r\n                \"payment_mode\": \"Cash\",\r\n                \"status\": \"To be Refunded\",\r\n                \"id\": \"2018KUCP1127\",\r\n                \"Amount\": \"26,000\"\r\n            }      \r\n            \r\n        }\r\n    }\r\n    \r\n    \r\n    componentDidMount(){\r\n        const Id = localStorage.getItem('user')       \r\n        axios.get(`http://localhost:4000/Fees/${Id}`)\r\n        .then(res => { \r\n            if(res.data){\r\n                console.log(res.data)\r\n                this.setState({status: res.data})\r\n                console.log(this.state.status[0])\r\n               \r\n            }\r\n            else console.log('error')\r\n            \r\n        }).catch(function(error){\r\n      \r\n            console.log(error);\r\n          })\r\n        \r\n    }\r\n    render() {        \r\n        const data = this.state.status\r\n        console.log('data: ' ,data)\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Sidebar/>                \r\n            <div className=\"profile table\">\r\n                <table class=\"table table-striped table-inverse table-responsive\">\r\n                    <thead class=\"thead-inverse\">\r\n                        <tr>\r\n                            <th>Year</th>\r\n                            <th>Type</th>\r\n                            <th>Payment Mode</th>\r\n                            <th>Transcation ID</th>\r\n                            <th>Status</th>\r\n                            <th>Amount</th>\r\n                            <th>Download</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            { data.map(i  => <Fee key = {i.transaction_id.x} fee = {i}/>)}                            \r\n                        </tbody>                      \r\n                </table>\r\n            </div></div>\r\n        )\r\n    }\r\n}\r\nclass Fee extends Component {\r\n    render() {\r\n        return (\r\n            \r\n            <React.Fragment>\r\n            <tr>\r\n                 <td>{this.props.fee.year}</td>\r\n                 <td>{this.props.fee.type}</td>\r\n                 <td>{this.props.fee.payment_mode}</td>\r\n                 <td>{this.props.fee.transaction_id}</td>\r\n                 <td>{this.props.fee.status}</td>\r\n                 <td>{this.props.fee.Amount}</td>\r\n                 <td><i className=\"fa fa-download\"></i></td>\r\n             </tr>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Fees;","import React from 'react';\nimport Login from './login';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport './style.css';\nimport Dashboard from './dashboard/Dashboard';\nimport Attendance from './dashboard/Attendance';\nimport Tattendance from './dashboard/Tattendance';\nimport Performance from './dashboard/Performance';\nimport Tperformance from './dashboard/Tperformance';\nimport Tdashboard from './dashboard/Tdashboard';\nimport Salary from './dashboard/Salary';\nimport Fees from './dashboard/Fees';\n\n \nfunction App() {\n  return (\n\n    <Router>\n      <Switch>\n        <Route exact path='/' component={Login} /> \n        <Route exact path='/student' component={Dashboard} />\n        <Route exact path='/student/Attendance' component={Attendance} />\n        <Route exact path='/student/Performance' component={Performance} />\n        <Route exact path='/student/Fees' component={Fees} />\n        <Route exact path='/teacher' component={Tdashboard} />\n        <Route exact path='/teacher/Attendance' component={Tattendance} />\n        <Route exact path='/teacher/Performance' component={Tperformance} />\n        <Route exact path='/teacher/salary' component={Salary} />\n        \n       \n      </Switch>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}